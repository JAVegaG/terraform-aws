name: Update aws infrastructure using terrafom

run-name: ${{ github.actor }} is updating the aws infrastructure ðŸš€

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  WORKSPACE: ${{ github.ref_name }}

jobs:
  Update-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Install aws
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform workspace 
        id: workspace
        run: |
          if [[ $WORKSPACE == "main" ]]; then
            terraform workspace select main
          else
            terraform workspace select develop
          fi

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply
        id: apply
        if: ${{ ( steps.plan.outcome == 'success' ) && ( github.event_name != 'pull_request' ) }}
        run: terraform apply -auto-approve

      - name: Terraform Output
        if: ${{ success() && steps.apply.conclusion == 'success' }}
        run: |
          echo "Terraform workspace: ${{ env.WORKSPACE }}\n" >> $GITHUB_STEP_SUMMARY
          echo "Terraform plan:\n${{ steps.plan.outputs.stdout }}" >> $GITHUB_STEP_SUMMARY
          echo "$(terraform output -no-color)" >> $GITHUB_STEP_SUMMARY